<!DOCTYPE html><html lang="en"><head><meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
        <meta charset="utf-8">
        <title>D3 Page Template</title>


<style>

.axis text {
  font: 10px sans-serif;
}

.axis path,
.axis line {
  fill: none;
  stroke: #000;
  shape-rendering: crispEdges;
}



</style>

      <script src="https://cdnjs.cloudflare.com/ajax/libs/d3/3.5.6/d3.min.js" charset="utf-8"></script> </head>
    <body>
        <script type="text/javascript">
  
d3.selection.prototype.moveToFront = function() {
  return this.each(function(){
  this.parentNode.appendChild(this);
  });
};


d3.json("data/mena_t.json", function(dataset) {

scalefactor = 80
margin = 20
width = 800
pointsize = 7

var summary = ""



var colscale = d3.scale.category20();
var dateRange = d3.time.scale()
		.domain([ new Date("01-01-2010"), new Date("06-01-2015")])
		.range([0, width]);


var customTimeFormat = d3.time.format.multi([
  [".%L", function(d) { return d.getMilliseconds(); }],
  [":%S", function(d) { return d.getSeconds(); }],
  ["%I:%M", function(d) { return d.getMinutes(); }],
  ["%I %p", function(d) { return d.getHours(); }],
  ["%a %d", function(d) { return d.getDay() && d.getDate() != 1; }],
  ["%b %d", function(d) { return d.getDate() != 1; }],
  ["%B", function(d) { return d.getMonth(); }],
  ["%Y", function() { return true; }]
]);





var svg = d3.select("body")
			.append("svg")
			.attr("width", 1200)
			.attr("height", 1600);





levels = svg.selectAll(".level")
	.data(dataset)
	.enter()
	.append("g")
	.attr("transform",function(d,i) {return "translate(15," + (2+ (i * scalefactor))  +    ")";})
	.attr("class","level")
	.attr("id", function(d,i) {return i;})

levels.append("g").attr("transform","translate(0," +  (scalefactor + pointsize + 3)  + ")")
	.append("line")	
	.attr("class","break")
	.attr({"x2":width,"y2":0})
	.attr("style","stroke-width: 1px;stroke: rgb(190,190,190);shape-rendering: crispEdges;");




var yAxis = d3.svg.axis()
    .scale(dateRange )
    .orient("top")
    .ticks(d3.time.month, 4)
    .tickFormat(customTimeFormat )
    .tickSize(6, -2);


svg.append("g")
	.attr("class","y axis")
	.attr("transform","translate(15,25)")
	.call(yAxis)


var yGrid = d3.svg.axis()
    .scale(dateRange )
    .orient("top")
    .ticks(d3.time.year, 1)
    .tickFormat("")
    .tickSize(5, 0);



levels.append("g").attr("transform","translate(0," + (scalefactor + pointsize + 3) +")").attr("class","gridlines").call(yGrid)
d3.selectAll(".gridlines").selectAll("line").attr("style","stroke-width: 1px;stroke: rgb(190,190,190);shape-rendering: crispEdges;")





levels.append("text")
	.attr("font-family","sans-serif")
	.attr("font-size","11px")
	.attr("dy", scalefactor + margin)
	.text(function(d) {return d.name ;})







points = levels.selectAll(".point")
	.data(function (d) {return d.points;})
	.enter()
	.append("g")
	.attr("class","point")
	.attr("transform",function(d) {
		return "translate(" +   (2 + dateRange(new Date(d.date)))   +","  +  (scalefactor  - (d.x * (pointsize + 1))) +")";
	})
	.on("mouseover",function() {
		th1 = d3.select(this );
		th1.append("text")
		.text(function(d) { return d.Title ;})
		.attr("dy", function(d) {return  9 + margin + (d.x * pointsize)})
		.attr("dx", 0)
		.attr("visibility","hidden")
		.attr("font-family","sans-serif")
		.attr("font-size","9px")
		.transition().duration(122)
	                     .delay(1)
		.attr("font-size","12px")
		.style("font-weight", "bold")
		.attr("visibility","visible")
		d3.select(this)
		.select("rect")
		.transition().duration(122)
	                     .delay(1)
		.attr("fill-opacity",0.4);
		d3.select(this).moveToFront();
		})
	.on("click",function(d) {
		d3.select(".summary")
			.html("<p style='font-family:sans-serif;font-size:11px'><b>" + d3.select(this).datum().Title +  "</b><br><br>" + d3.select(this).datum().Words.replace("\n\n","<br><br>") + "</p>")
			.attr("y", margin + (d.Label *  scalefactor ));
		})
	.on("mouseout",function() {
		d3.select(this).select("text").remove()
		d3.select(this).select("rect")
		
		.transition().duration(122)
	                     .delay(1)
		.attr("fill-opacity",1);
		});



points.append("rect")
	.attr("width",pointsize )
	.attr("height",pointsize )
	.attr("fill",function(d) {
		return colscale([d.Label]);
	});



svg.append("foreignObject")
	.attr("class","summary")
	.attr("height",900)
	.attr("width",250)
 	.attr("y", 10 + margin )
	.attr("x",width + margin)
	.html("<p style='font-family:sans-serif;font-size:10px'>" + summary + "<\p>");

});





</script>
    
</body></html>